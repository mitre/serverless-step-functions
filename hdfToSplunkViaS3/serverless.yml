service: s3buckettosplunk

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  iam:
    role:
      path: ${env:IAM_ROLE_PATH}
      permissionsBoundary: ${env:IAM_ROLE_BOUNDARY}

functions:
  hello:
    handler: handler.hello
#    NOTE: Please make sure to change your handler code to work with those events
#      - s3: ${env:BUCKET}

stepFunctions:
  stateMachines:
    hdfToSplunkViaS3Workflow:
      role:
        Fn::GetAtt: ["StateMachineRole", "Arn"]
      definition:
        Comment: "Workflow initiated"
        StartAt: hdfToSplunkFunctionExecution
        States:
          hdfToSplunkFunctionExecution:
            Type: Task
            Resource:
              Fn::GetAtt: [hello, Arn]
            End: true

resources:
  Resources:
    StateMachineRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: hdfToSplunkViaS3Role
        Path: ${env:IAM_ROLE_PATH}
        PermissionsBoundary: ${env:IAM_ROLE_BOUNDARY}
        AssumeRolePolicyDocument:
          Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole

    # call function to load/glue file from event
    # 

plugins:
  - serverless-step-functions


## SNIPPETS

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"